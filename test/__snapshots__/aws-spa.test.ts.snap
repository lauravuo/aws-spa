// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Default Stack 1`] = `
Object {
  "Outputs": Object {
    "Site": Object {
      "Value": "https://example.com",
    },
    "accessKeyId": Object {
      "Value": Object {
        "Ref": "UpdaterAccessKey",
      },
    },
    "secretAccessKey": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "UpdaterAccessKey",
          "SecretAccessKey",
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2ArtifactHash652C125C": Object {
      "Description": "Artifact hash for asset \\"19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2\\"",
      "Type": "String",
    },
    "AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3BucketFCCD3A76": Object {
      "Description": "S3 bucket for asset \\"19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2\\"",
      "Type": "String",
    },
    "AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3VersionKey07AF06B6": Object {
      "Description": "S3 key for asset version \\"19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "SiteAliasRecord3C0AF5BF": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "SiteDistributionCFDistribution209CF7F5",
              "DomainName",
            ],
          },
          "HostedZoneId": "Z2FDTNDATAQYW2",
        },
        "HostedZoneId": "DUMMY",
        "Name": "example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "SiteBucket397A1860": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccessControl": "PublicRead",
        "BucketName": "example.com",
        "WebsiteConfiguration": Object {
          "ErrorDocument": "index.html",
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "SiteBucketPolicy3AC1D0F8": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "SiteBucket397A1860",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "SiteOriginAccessIdentity9B8D9864",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "SiteBucket397A1860",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "SiteOriginAccessIdentity9B8D9864",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SiteBucket397A1860",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SiteBucket397A1860",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "SiteCertificateCertificateRequestorFunction7CFA7DEA": Object {
      "DependsOn": Array [
        "SiteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy96ED5C9C",
        "SiteCertificateCertificateRequestorFunctionServiceRole645E891D",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3BucketFCCD3A76",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3VersionKey07AF06B6",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters19e461d2ff1a5b90438fed6ceee4c197d7efee8712a6f76d85b501ab20bfb1a2S3VersionKey07AF06B6",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SiteCertificateCertificateRequestorFunctionServiceRole645E891D",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SiteCertificateCertificateRequestorFunctionServiceRole645E891D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SiteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy96ED5C9C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/DUMMY",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SiteCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy96ED5C9C",
        "Roles": Array [
          Object {
            "Ref": "SiteCertificateCertificateRequestorFunctionServiceRole645E891D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SiteCertificateCertificateRequestorResource6021082A": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "example.com",
        "HostedZoneId": "DUMMY",
        "Region": "us-east-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "SiteCertificateCertificateRequestorFunction7CFA7DEA",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "SiteDistributionCFDistribution209CF7F5": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "example.com",
          ],
          "CustomErrorResponses": Array [
            Object {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "SiteBucket397A1860",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "SiteOriginAccessIdentity9B8D9864",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "SiteCertificateCertificateRequestorResource6021082A",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.1_2016",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "SiteOriginAccessIdentity9B8D9864": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Access example.com bucket only from CloudFront",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "SiteUpdater73E986BA": Object {
      "Type": "AWS::IAM::User",
    },
    "SiteUpdaterPolicy5F1C9709": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:PutObject*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "SiteBucket397A1860",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SiteUpdaterPolicy5F1C9709",
        "Users": Array [
          Object {
            "Ref": "SiteUpdater73E986BA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "UpdaterAccessKey": Object {
      "Properties": Object {
        "UserName": Object {
          "Ref": "SiteUpdater73E986BA",
        },
      },
      "Type": "AWS::IAM::AccessKey",
    },
  },
}
`;
